# handlers/common.py
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
import logging
from config import SUPER_ADMIN_ID # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ SUPER_ADMIN_ID –≤ config.py


# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ loader –∏ utils
from loader import get_db  # –£–±–∏—Ä–∞–µ–º bot, –µ—Å–ª–∏ –æ–Ω –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –∑–¥–µ—Å—å
from bot_utils import get_main_keyboard

router = Router()
logger = logging.getLogger(__name__)


@router.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext):
    db = get_db()
    user = message.from_user
    try:
        # upsert_user —Ç–µ–ø–µ—Ä—å —Å–∞–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç is_admin –¥–ª—è SUPER_ADMIN_ID
        db.upsert_user(
            user_id=user.id,
            username=user.username,
            first_name=user.first_name,
            last_name=user.last_name
        )
        logger.info(f"User {user.id} ({user.username or 'NoUsername'}) started/updated. SUPER_ADMIN_ID: {SUPER_ADMIN_ID}")
    except Exception as e:
        logger.error(f"Failed to upsert user {user.id} on /start: {e}", exc_info=True)

        # –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ

    current_fsm_state = await state.get_state()  # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
    if current_fsm_state is not None:
        await state.clear()
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–±—Ä–æ—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ª—É—á—à–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –±—ã–ª–æ
        await message.answer("–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–±—Ä–æ—à–µ–Ω–æ. –ù–∞—á–∏–Ω–∞–µ–º —Å–Ω–∞—á–∞–ª–∞.",
                             reply_markup=get_main_keyboard())

    await message.answer(
        "ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TelePost Manager!\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—è–º–∏ –≤ –≤–∞—à–∏—Ö Telegram-–∫–∞–Ω–∞–ª–∞—Ö.",
        reply_markup=get_main_keyboard()
    )


@router.message(F.text == "üÜò –ü–æ–º–æ—â—å")
@router.message(Command("help"))
async def cmd_help(message: types.Message):
    help_text = (
        "üìã <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n\n"
        "‚ñ´Ô∏è /start - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n"
        "‚ñ´Ô∏è /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n"
        "‚ñ´Ô∏è <b>üìù –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç</b> - –ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –¥–ª—è –∫–∞–Ω–∞–ª–∞.\n"
        "‚ñ´Ô∏è <b>üì¢ –ú–æ–∏ –∫–∞–Ω–∞–ª—ã</b> - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.\n"
        "‚ñ´Ô∏è <b>‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª</b> - –ü–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.\n"
        "‚ñ´Ô∏è <b>üìö –®–∞–±–ª–æ–Ω—ã</b> - –£–ø—Ä–∞–≤–ª—è—Ç—å —à–∞–±–ª–æ–Ω–∞–º–∏ –¥–ª—è –ø–æ—Å—Ç–æ–≤ (–æ–±—â–∏–µ + –≤–∞—à–∏ –ª–∏—á–Ω—ã–µ).\n"
        "‚ñ´Ô∏è <b>üìú –ò—Å—Ç–æ—Ä–∏—è</b> - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π.\n\n"
        "‚öôÔ∏è <b>–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª:</b>\n"
        "1. –ù–∞–∂–º–∏—Ç–µ ¬´‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª¬ª.\n"
        "2. –°–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å –ø—Ä–∞–≤–æ–º –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π.\n"
        "3. –ü–µ—Ä–µ—à–ª–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º.\n\n"
        "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n"
        "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –Ω—É–∂–Ω–æ–º –∫–∞–Ω–∞–ª–µ –∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é.\n"
        "2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start."
    )
    await message.answer(help_text, reply_markup=get_main_keyboard(), parse_mode="HTML")


@router.message(Command("cancel"))
@router.message(F.text.lower() == "–æ—Ç–º–µ–Ω–∞")
async def cmd_cancel(message: types.Message, state: FSMContext):
    current_fsm_state = await state.get_state()
    if current_fsm_state is None:
        await message.answer("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã.", reply_markup=get_main_keyboard())
        return

    logger.info(f"User {message.from_user.id} cancelled state {current_fsm_state}")
    await state.clear()
    await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=get_main_keyboard())