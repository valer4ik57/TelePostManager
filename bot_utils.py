# bot_utils.py (–≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞)
from aiogram import Bot, types
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
import html # –î–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º loader –¥–ª—è get_db
from loader import get_db
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
from utils.checks import is_channel_admin as check_user_is_channel_admin


# –í–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è is_channel_admin –∏–∑ utils.checks —É–∂–µ –µ—Å—Ç—å,
# –º—ã –µ–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ –≤—ã—à–µ –∫–∞–∫ check_user_is_channel_admin.

async def check_bot_is_channel_admin(bot: Bot, channel_id: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ë–û–¢ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏ –∏–º–µ–µ—Ç –ª–∏ –ø—Ä–∞–≤–∞ –Ω–∞ –ø–æ—Å—Ç–∏–Ω–≥.
    """
    try:
        # bot.id –¥–æ—Å—Ç—É–ø–µ–Ω –≤ aiogram 3+
        bot_member = await bot.get_chat_member(chat_id=channel_id, user_id=bot.id)
        if bot_member.status == 'administrator':
            # –î–ª—è aiogram 3.x: ChatMemberAdministrator –∏–º–µ–µ—Ç –∞—Ç—Ä–∏–±—É—Ç—ã –≤—Ä–æ–¥–µ can_post_messages
            if hasattr(bot_member, 'can_post_messages') and bot_member.can_post_messages:
                return True
            # –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞ –Ω–µ—Ç –≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –≤–µ—Ä—Å–∏–∏/—Ç–∏–ø–µ ChatMember,
            # –Ω–æ —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å —ç—Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º (—É–ø—Ä–æ—â–µ–Ω–∏–µ)
            # –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ ChatMember (creator, etc.)
            # –î–ª—è –±–∞–∑–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∏–Ω–≥–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
            return True  # –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        return False
    except Exception as e:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–Ω–æ
        print(f"Error checking bot admin status for channel {channel_id}: {e}")
        return False


def get_main_keyboard() -> types.ReplyKeyboardMarkup:
    builder = ReplyKeyboardBuilder()
    builder.button(text="üìù –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç")
    builder.button(text="üì¢ –ú–æ–∏ –∫–∞–Ω–∞–ª—ã")
    builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª")
    builder.button(text="üìö –®–∞–±–ª–æ–Ω—ã")
    builder.button(text="üìú –ò—Å—Ç–æ—Ä–∏—è")
    builder.button(text="üÜò –ü–æ–º–æ—â—å")
    builder.adjust(2, 2, 2)
    return builder.as_markup(resize_keyboard=True)


async def get_channels_keyboard(selected_channel_id: int = None) -> types.InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏.
    selected_channel_id - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã–π.
    """
    db = get_db()
    channels = db.fetchall("SELECT channel_id, title FROM channels ORDER BY title")
    builder = InlineKeyboardBuilder()
    if channels:
        for cid, title in channels:
            button_text = title
            if selected_channel_id and cid == selected_channel_id:
                button_text = f"‚úÖ {title}"  # –ü–æ–º–µ—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
            builder.row(types.InlineKeyboardButton(text=button_text, callback_data=f"channel_{cid}"))
    # –ï—Å–ª–∏ –∫–∞–Ω–∞–ª–æ–≤ –Ω–µ—Ç, –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—É–¥–µ—Ç –ø—É—Å—Ç–æ–π, —á—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    return builder.as_markup()


async def notify_user(bot: Bot, user_id: int, text: str, **kwargs):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    try:
        await bot.send_message(chat_id=user_id, text=text, **kwargs)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")


async def notify_post_published(bot: Bot, user_id: int, channel_id: int, message_id: int, channel_title: str):
    """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞."""
    try:
        channel_id_str = str(channel_id).replace('-100', '')  # –î–ª—è –ø—É–±–ª–∏—á–Ω–æ–π —Å—Å—ã–ª–∫–∏

        text = (f"‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ ¬´{channel_title}¬ª!\n"
                f"üëÅ‚Äçüó® –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å: https://t.me/c/{channel_id_str}/{message_id}")
        await notify_user(bot, user_id, text)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")

def escape_html(text: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ HTML —Å–∏–º–≤–æ–ª—ã."""
    if not text:
        return ""
    return html.escape(text)
